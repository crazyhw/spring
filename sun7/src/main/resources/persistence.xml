<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.0"
	xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd">  
	
	<persistence-unit name="jpa-2" transaction-type="RESOURCE_LOCAL">
		<!-- 配置使用什么ORM产品作为JPA的实现
			1. 实际上配置的是接口javax.persistence.spi.PersistenceProvider的实现类
			2. 若项目只有一个实现产品时，可以不用配置
		 -->
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		
		<properties>
			<!-- 连接数据库的基本信息 -->
			<property name="javax.persistence.jdbc.url" value="jdbc:postgresql://localhost:5432/jpa-1"/>
			<property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver"/>
			<property name="javax.persistence.jdbc.user" value="postgres"/>
			<property name="javax.persistence.jdbc.password" value="root"/>
			
			<!-- 配置JPA实现产品的基本属性。因为使用hibernate，故也就是配置hibernate的基本属性 -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect"/>
			<property name="hibernate.show_sql" value="true"/>
			<property name="hibernate.format_sql" value="true"/>
			<!-- 
				hibernate.hbm2ddl.auto参数的作用主要用于：自动创建|更新|验证数据库表结构。如果不是此方面的需求建议set value="none"。 
				create： 
				每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。 
				create-drop ： 
				每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。 update： 
				最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 
				应用第一次运行起来后才会。
				validate ： 
				 每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
			 -->
			<property name="hibernate.hbm2ddl.auto" value="update"/>
		</properties>
	</persistence-unit>
</persistence>
