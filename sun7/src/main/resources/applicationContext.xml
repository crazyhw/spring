<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"

    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

    xmlns:context="http://www.springframework.org/schema/context"

    xmlns:tx="http://www.springframework.org/schema/tx"

    xmlns:jpa="http://www.springframework.org/schema/data/jpa"

    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd

        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd

        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd

        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

     <!-- 配置自动扫描的包,扫描service层,service上面有注解就直接被spring容器实例化 -->

    <context:component-scan base-package="com.edu.zut.cs"/>

    <!-- 1. 配置数据源 -->

    <context:property-placeholder location="classpath:db.properties"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">

        <property name="jdbcUrl" value="${jdbcUrl}"/>

        <property name="driverClass" value="${driverClass}"/>

        <property name="user" value="${user}"/>

        <property name="password" value="${password}"/>

        <property name="initialPoolSize" value="${initialPoolSize}"/>

        <property name="maxPoolSize" value="${maxPoolSize}"/>

    </bean>
 
    <!-- 2. 配置 JPA 的 EntityManagerFactory -->

    <bean id="entityManagerFactory" 
            class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

        <property name="dataSource" ref="dataSource"/>

        <property name="jpaVendorAdapter">

            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>

        </property>

        <!-- 配置包扫描，扫描实体 -->

       <property name="packagesToScan" value="com.edu.zut.cs"/>

        <property name="jpaProperties">

            <props>

                <!-- 生成的数据表的列的映射策略 -->

                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <!-- hibernate 基本属性 -->

                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>

                <prop key="hibernate.show_sql">true</prop>

                <prop key="hibernate.format_sql">true</prop>

                <prop key="hibernate.hbm2ddl.auto">update</prop>

            </props>

        </property>

    </bean>

    

    <!-- 3. 配置事务管理器 -->

    <bean id="transactionManager"

        class="org.springframework.orm.jpa.JpaTransactionManager">

        <property name="entityManagerFactory" ref="entityManagerFactory"/>  

    </bean>

 
    <!-- 4. 配置支持注解的事务 -->

    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!-- 5. 配置 SpringData,需要加入  jpa 的命名空间 -->

    <!-- base-package: 扫描 Repository Bean 所在的 package -->

    <jpa:repositories base-package="com.zxy.dao" entity-manager-factory-ref="entityManagerFactory">

    </jpa:repositories>

</beans>